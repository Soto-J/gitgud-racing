import { z } from "zod";

export const SeasonScheduleInputSchema = z.object({
  includeSeries: z.enum(["true", "false"]).default("true"),
  seasonYear: z.string().min(1, { message: "Season year required." }),
  seasonQuarter: z.string().min(1, { message: "Season quarter required." }),
});

export const SeasonScheduleResponse = z.object({
  seasons: z.array(
    z.object({
      season_id: z.number(),
      season_name: z.string(),
      active: z.boolean(),
      allowed_season_members: z.any().nullable(),
      car_class_ids: z.array(z.number()),
      car_switching: z.boolean(),
      car_types: z.array(
        z.object({
          car_type: z.string(),
        }),
      ),
      caution_laps_do_not_count: z.boolean(),
      complete: z.boolean(),
      connection_black_flag: z.boolean(),
      consec_caution_within_nlaps: z.number(),
      consec_cautions_single_file: z.boolean(),
      cross_license: z.boolean(),
      current_week_sched: z.object({
        race_week_num: z.number(),
        track: z.object({
          category: z.string(),
          category_id: z.number(),
          config_name: z.string().optional(),
          track_id: z.number(),
          track_name: z.string(),
        }),
        car_restrictions: z.array(
          z.object({
            car_id: z.number(),
            max_dry_tire_sets: z.number(),
            max_pct_fuel_fill: z.number(),
            power_adjust_pct: z.number(),
            race_setup_id: z.number().nullish(),
            weight_penalty_kg: z.number(),
          }),
        ),
        race_lap_limit: z.number().nullish(),
        race_time_limit: z.number().nullish(),
        precip_chance: z.number().nullish(),
        start_type: z.string(),
        category_id: z.number(),
      }),
      distributed_matchmaking: z.boolean(),
      driver_change_rule: z.number(),
      driver_changes: z.boolean(),
      drops: z.number(),
      elig: z.object({
        own_car: z.boolean(),
        own_track: z.boolean(),
      }),
      enable_pitlane_collisions: z.boolean(),
      fixed_setup: z.boolean(),
      green_white_checkered_limit: z.number(),
      grid_by_class: z.boolean(),
      hardcore_level: z.number(),
      has_mpr: z.boolean(),
      has_supersessions: z.boolean(),
      ignore_license_for_practice: z.boolean(),
      incident_limit: z.number(),
      incident_warn_mode: z.number(),
      incident_warn_param1: z.number(),
      incident_warn_param2: z.number(),
      is_heat_racing: z.boolean(),
      license_group: z.number(),
      license_group_types: z.array(
        z.object({
          license_group_type: z.number(),
        }),
      ),
      lucky_dog: z.boolean(),
      max_team_drivers: z.number(),
      max_weeks: z.number(),
      min_team_drivers: z.number(),
      multiclass: z.boolean(),
      must_use_diff_tire_types_in_race: z.boolean(),
      num_fast_tows: z.number(),
      num_opt_laps: z.number(),
      official: z.boolean(),
      op_duration: z.number(),
      open_practice_session_type_id: z.number(),
      qualifier_must_start_race: z.boolean(),
      race_week: z.number(),
      race_week_to_make_divisions: z.number(),
      reg_user_count: z.number(),
      region_competition: z.boolean(),
      restrict_by_member: z.boolean(),
      restrict_to_car: z.boolean(),
      restrict_viewing: z.boolean(),
      schedule_description: z.string(),
      season_quarter: z.number(),
      season_short_name: z.string(),
      season_year: z.number(),
      send_to_open_practice: z.boolean(),
      series_id: z.number(),
      short_parade_lap: z.boolean(),
      start_date: z.string(),
      start_on_qual_tire: z.boolean(),
      start_zone: z.boolean(),
      track_types: z.array(
        z.object({
          track_type: z.string(),
        }),
      ),
      unsport_conduct_rule_mode: z.number(),
    }),
  ),
});

